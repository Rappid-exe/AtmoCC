/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  CarbonCreditToken,
  CarbonCreditTokenInterface,
} from "../../contracts/CarbonCreditToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "systemId",
        type: "string",
      },
    ],
    name: "CarbonCreditMinted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "systemId",
        type: "string",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610b30380380610b3083398101604081905261002f91610135565b806001600160a01b03811661005e57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b610067816100e5565b5060408051808201909152601781527f41746d6f536965766520436172626f6e2043726564697400000000000000000060208201526003906100a99082610204565b5060408051808201909152600381526241434360e81b60208201526004906100d19082610204565b50506005805460ff191660121790556102c2565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561014757600080fd5b81516001600160a01b038116811461015e57600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061018f57607f821691505b6020821081036101af57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156101ff57806000526020600020601f840160051c810160208510156101dc5750805b601f840160051c820191505b818110156101fc57600081556001016101e8565b50505b505050565b81516001600160401b0381111561021d5761021d610165565b6102318161022b845461017b565b846101b5565b6020601f821160018114610265576000831561024d5750848201515b600019600385901b1c1916600184901b1784556101fc565b600084815260208120601f198516915b828110156102955787850151825560209485019460019092019101610275565b50848210156102b35786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b61085f806102d16000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b1461011b57806395d89b4114610136578063a9059cbb1461013e578063d3fc986414610161578063f2fde38b1461017457600080fd5b806306fdde03146100a357806318160ddd146100c1578063313ce567146100d357806370a08231146100e8578063715018a614610111575b600080fd5b6100ab610187565b6040516100b89190610649565b60405180910390f35b6002545b6040519081526020016100b8565b60055460405160ff90911681526020016100b8565b6100c56100f636600461067f565b6001600160a01b031660009081526001602052604090205490565b610119610219565b005b6000546040516001600160a01b0390911681526020016100b8565b6100ab61022d565b61015161014c36600461069a565b61023c565b60405190151581526020016100b8565b61011961016f3660046106da565b610256565b61011961018236600461067f565b610386565b606060038054610196906107ad565b80601f01602080910402602001604051908101604052809291908181526020018280546101c2906107ad565b801561020f5780601f106101e45761010080835404028352916020019161020f565b820191906000526020600020905b8154815290600101906020018083116101f257829003601f168201915b5050505050905090565b6102216103c4565b61022b60006103f1565b565b606060048054610196906107ad565b60003361024a81858561044e565b60019150505b92915050565b61025e6103c4565b6001600160a01b0383166102b95760405162461bcd60e51b815260206004820152601e60248201527f4d696e743a206d696e7420746f20746865207a65726f2061646472657373000060448201526064015b60405180910390fd5b81600260008282546102cb91906107e7565b90915550506001600160a01b038316600090815260016020526040812080548492906102f89084906107e7565b90915550506040518281526001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3826001600160a01b03167fb467ba5f617253139e5f2f3016bfc830bbacd5a4cc1a730a00a0bb13f2e9a06f8383604051610379929190610808565b60405180910390a2505050565b61038e6103c4565b6001600160a01b0381166103b857604051631e4fbdf760e01b8152600060048201526024016102b0565b6103c1816103f1565b50565b6000546001600160a01b0316331461022b5760405163118cdaa760e01b81523360048201526024016102b0565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0383166104b55760405162461bcd60e51b815260206004820152602860248201527f5472616e736665723a207472616e736665722066726f6d20746865207a65726f604482015267206164647265737360c01b60648201526084016102b0565b6001600160a01b03821661051a5760405162461bcd60e51b815260206004820152602660248201527f5472616e736665723a207472616e7366657220746f20746865207a65726f206160448201526564647265737360d01b60648201526084016102b0565b6001600160a01b038316600090815260016020526040902054818110156105955760405162461bcd60e51b815260206004820152602960248201527f5472616e736665723a207472616e7366657220616d6f756e7420657863656564604482015268732062616c616e636560b81b60648201526084016102b0565b6001600160a01b0380851660008181526001602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906105f59086815260200190565b60405180910390a350505050565b6000815180845260005b818110156106295760208185018101518683018201520161060d565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600061065c6020830184610603565b9392505050565b80356001600160a01b038116811461067a57600080fd5b919050565b60006020828403121561069157600080fd5b61065c82610663565b600080604083850312156106ad57600080fd5b6106b683610663565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b6000806000606084860312156106ef57600080fd5b6106f884610663565b925060208401359150604084013567ffffffffffffffff81111561071b57600080fd5b8401601f8101861361072c57600080fd5b803567ffffffffffffffff811115610746576107466106c4565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715610775576107756106c4565b60405281815282820160200188101561078d57600080fd5b816020840160208301376000602083830101528093505050509250925092565b600181811c908216806107c157607f821691505b6020821081036107e157634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561025057634e487b7160e01b600052601160045260246000fd5b8281526040602082015260006108216040830184610603565b94935050505056fea26469706673582212203f6a1e836fc88e07ca2de1eb30dd57c429f62a5879a135d42cd232a171c853a064736f6c634300081c0033";

type CarbonCreditTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CarbonCreditTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CarbonCreditToken__factory extends ContractFactory {
  constructor(...args: CarbonCreditTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(initialOwner, overrides || {});
  }
  override deploy(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(initialOwner, overrides || {}) as Promise<
      CarbonCreditToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CarbonCreditToken__factory {
    return super.connect(runner) as CarbonCreditToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CarbonCreditTokenInterface {
    return new Interface(_abi) as CarbonCreditTokenInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CarbonCreditToken {
    return new Contract(address, _abi, runner) as unknown as CarbonCreditToken;
  }
}
